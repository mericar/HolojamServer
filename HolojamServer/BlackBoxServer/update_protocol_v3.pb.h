// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_protocol_v3.proto

#ifndef PROTOBUF_update_5fprotocol_5fv3_2eproto__INCLUDED
#define PROTOBUF_update_5fprotocol_5fv3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace update_protocol_v3 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto();
void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto();

class AxisButton;
class ExtraData;
class LiveObject;
class Update;

// ===================================================================

class ExtraData : public ::google::protobuf::Message {
 public:
  ExtraData();
  virtual ~ExtraData();

  ExtraData(const ExtraData& from);

  inline ExtraData& operator=(const ExtraData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtraData& default_instance();

  void Swap(ExtraData* other);

  // implements Message ----------------------------------------------

  inline ExtraData* New() const { return New(NULL); }

  ExtraData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtraData& from);
  void MergeFrom(const ExtraData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtraData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string label = 1;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // optional int32 int_val = 2;
  bool has_int_val() const;
  void clear_int_val();
  static const int kIntValFieldNumber = 2;
  ::google::protobuf::int32 int_val() const;
  void set_int_val(::google::protobuf::int32 value);

  // optional float float_val = 3;
  bool has_float_val() const;
  void clear_float_val();
  static const int kFloatValFieldNumber = 3;
  float float_val() const;
  void set_float_val(float value);

  // optional double double_val = 4;
  bool has_double_val() const;
  void clear_double_val();
  static const int kDoubleValFieldNumber = 4;
  double double_val() const;
  void set_double_val(double value);

  // optional string string_val = 5;
  bool has_string_val() const;
  void clear_string_val();
  static const int kStringValFieldNumber = 5;
  const ::std::string& string_val() const;
  void set_string_val(const ::std::string& value);
  void set_string_val(const char* value);
  void set_string_val(const char* value, size_t size);
  ::std::string* mutable_string_val();
  ::std::string* release_string_val();
  void set_allocated_string_val(::std::string* string_val);

  // optional bool bool_val = 6;
  bool has_bool_val() const;
  void clear_bool_val();
  static const int kBoolValFieldNumber = 6;
  bool bool_val() const;
  void set_bool_val(bool value);

  // optional bytes bytes_val = 7;
  bool has_bytes_val() const;
  void clear_bytes_val();
  static const int kBytesValFieldNumber = 7;
  const ::std::string& bytes_val() const;
  void set_bytes_val(const ::std::string& value);
  void set_bytes_val(const char* value);
  void set_bytes_val(const void* value, size_t size);
  ::std::string* mutable_bytes_val();
  ::std::string* release_bytes_val();
  void set_allocated_bytes_val(::std::string* bytes_val);

  // repeated .update_protocol_v3.ExtraData extra_val = 8;
  int extra_val_size() const;
  void clear_extra_val();
  static const int kExtraValFieldNumber = 8;
  const ::update_protocol_v3::ExtraData& extra_val(int index) const;
  ::update_protocol_v3::ExtraData* mutable_extra_val(int index);
  ::update_protocol_v3::ExtraData* add_extra_val();
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
      mutable_extra_val();
  const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
      extra_val() const;

  // @@protoc_insertion_point(class_scope:update_protocol_v3.ExtraData)
 private:
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_int_val();
  inline void clear_has_int_val();
  inline void set_has_float_val();
  inline void clear_has_float_val();
  inline void set_has_double_val();
  inline void clear_has_double_val();
  inline void set_has_string_val();
  inline void clear_has_string_val();
  inline void set_has_bool_val();
  inline void clear_has_bool_val();
  inline void set_has_bytes_val();
  inline void clear_has_bytes_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 int_val_;
  float float_val_;
  double double_val_;
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  ::google::protobuf::internal::ArenaStringPtr bytes_val_;
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData > extra_val_;
  bool bool_val_;
  friend void  protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto();

  void InitAsDefaultInstance();
  static ExtraData* default_instance_;
};
// -------------------------------------------------------------------

class AxisButton : public ::google::protobuf::Message {
 public:
  AxisButton();
  virtual ~AxisButton();

  AxisButton(const AxisButton& from);

  inline AxisButton& operator=(const AxisButton& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AxisButton& default_instance();

  void Swap(AxisButton* other);

  // implements Message ----------------------------------------------

  inline AxisButton* New() const { return New(NULL); }

  AxisButton* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AxisButton& from);
  void MergeFrom(const AxisButton& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AxisButton* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:update_protocol_v3.AxisButton)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto();

  void InitAsDefaultInstance();
  static AxisButton* default_instance_;
};
// -------------------------------------------------------------------

class LiveObject : public ::google::protobuf::Message {
 public:
  LiveObject();
  virtual ~LiveObject();

  LiveObject(const LiveObject& from);

  inline LiveObject& operator=(const LiveObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LiveObject& default_instance();

  void Swap(LiveObject* other);

  // implements Message ----------------------------------------------

  inline LiveObject* New() const { return New(NULL); }

  LiveObject* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LiveObject& from);
  void MergeFrom(const LiveObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LiveObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string label = 1;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // optional float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // optional float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // optional float z = 4;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // optional float qx = 5;
  bool has_qx() const;
  void clear_qx();
  static const int kQxFieldNumber = 5;
  float qx() const;
  void set_qx(float value);

  // optional float qy = 6;
  bool has_qy() const;
  void clear_qy();
  static const int kQyFieldNumber = 6;
  float qy() const;
  void set_qy(float value);

  // optional float qz = 7;
  bool has_qz() const;
  void clear_qz();
  static const int kQzFieldNumber = 7;
  float qz() const;
  void set_qz(float value);

  // optional float qw = 8;
  bool has_qw() const;
  void clear_qw();
  static const int kQwFieldNumber = 8;
  float qw() const;
  void set_qw(float value);

  // optional int32 button_bits = 9;
  bool has_button_bits() const;
  void clear_button_bits();
  static const int kButtonBitsFieldNumber = 9;
  ::google::protobuf::int32 button_bits() const;
  void set_button_bits(::google::protobuf::int32 value);

  // repeated .update_protocol_v3.AxisButton axis_buttons = 10;
  int axis_buttons_size() const;
  void clear_axis_buttons();
  static const int kAxisButtonsFieldNumber = 10;
  const ::update_protocol_v3::AxisButton& axis_buttons(int index) const;
  ::update_protocol_v3::AxisButton* mutable_axis_buttons(int index);
  ::update_protocol_v3::AxisButton* add_axis_buttons();
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >*
      mutable_axis_buttons();
  const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >&
      axis_buttons() const;

  // repeated .update_protocol_v3.ExtraData extra_data = 11;
  int extra_data_size() const;
  void clear_extra_data();
  static const int kExtraDataFieldNumber = 11;
  const ::update_protocol_v3::ExtraData& extra_data(int index) const;
  ::update_protocol_v3::ExtraData* mutable_extra_data(int index);
  ::update_protocol_v3::ExtraData* add_extra_data();
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
      mutable_extra_data();
  const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
      extra_data() const;

  // @@protoc_insertion_point(class_scope:update_protocol_v3.LiveObject)
 private:
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_qx();
  inline void clear_has_qx();
  inline void set_has_qy();
  inline void clear_has_qy();
  inline void set_has_qz();
  inline void clear_has_qz();
  inline void set_has_qw();
  inline void clear_has_qw();
  inline void set_has_button_bits();
  inline void clear_has_button_bits();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  float x_;
  float y_;
  float z_;
  float qx_;
  float qy_;
  float qz_;
  float qw_;
  ::google::protobuf::int32 button_bits_;
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton > axis_buttons_;
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData > extra_data_;
  friend void  protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto();

  void InitAsDefaultInstance();
  static LiveObject* default_instance_;
};
// -------------------------------------------------------------------

class Update : public ::google::protobuf::Message {
 public:
  Update();
  virtual ~Update();

  Update(const Update& from);

  inline Update& operator=(const Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Update& default_instance();

  void Swap(Update* other);

  // implements Message ----------------------------------------------

  inline Update* New() const { return New(NULL); }

  Update* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Update& from);
  void MergeFrom(const Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string label = 1;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // optional int32 mod_version = 2;
  bool has_mod_version() const;
  void clear_mod_version();
  static const int kModVersionFieldNumber = 2;
  ::google::protobuf::int32 mod_version() const;
  void set_mod_version(::google::protobuf::int32 value);

  // optional bool lhs_frame = 3;
  bool has_lhs_frame() const;
  void clear_lhs_frame();
  static const int kLhsFrameFieldNumber = 3;
  bool lhs_frame() const;
  void set_lhs_frame(bool value);

  // optional int32 time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // repeated .update_protocol_v3.LiveObject live_objects = 5;
  int live_objects_size() const;
  void clear_live_objects();
  static const int kLiveObjectsFieldNumber = 5;
  const ::update_protocol_v3::LiveObject& live_objects(int index) const;
  ::update_protocol_v3::LiveObject* mutable_live_objects(int index);
  ::update_protocol_v3::LiveObject* add_live_objects();
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >*
      mutable_live_objects();
  const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >&
      live_objects() const;

  // @@protoc_insertion_point(class_scope:update_protocol_v3.Update)
 private:
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_mod_version();
  inline void clear_has_mod_version();
  inline void set_has_lhs_frame();
  inline void clear_has_lhs_frame();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 mod_version_;
  bool lhs_frame_;
  ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject > live_objects_;
  ::google::protobuf::int32 time_;
  friend void  protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto();
  friend void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto();

  void InitAsDefaultInstance();
  static Update* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtraData

// optional string label = 1;
inline bool ExtraData::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtraData::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtraData::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtraData::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& ExtraData::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.label)
}
inline void ExtraData::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.label)
}
inline void ExtraData::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.label)
}
inline ::std::string* ExtraData::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtraData::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.label)
}

// optional int32 int_val = 2;
inline bool ExtraData::has_int_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtraData::set_has_int_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtraData::clear_has_int_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtraData::clear_int_val() {
  int_val_ = 0;
  clear_has_int_val();
}
inline ::google::protobuf::int32 ExtraData::int_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.int_val)
  return int_val_;
}
inline void ExtraData::set_int_val(::google::protobuf::int32 value) {
  set_has_int_val();
  int_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.int_val)
}

// optional float float_val = 3;
inline bool ExtraData::has_float_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtraData::set_has_float_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExtraData::clear_has_float_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExtraData::clear_float_val() {
  float_val_ = 0;
  clear_has_float_val();
}
inline float ExtraData::float_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.float_val)
  return float_val_;
}
inline void ExtraData::set_float_val(float value) {
  set_has_float_val();
  float_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.float_val)
}

// optional double double_val = 4;
inline bool ExtraData::has_double_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExtraData::set_has_double_val() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExtraData::clear_has_double_val() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExtraData::clear_double_val() {
  double_val_ = 0;
  clear_has_double_val();
}
inline double ExtraData::double_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.double_val)
  return double_val_;
}
inline void ExtraData::set_double_val(double value) {
  set_has_double_val();
  double_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.double_val)
}

// optional string string_val = 5;
inline bool ExtraData::has_string_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExtraData::set_has_string_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExtraData::clear_has_string_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExtraData::clear_string_val() {
  string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_val();
}
inline const ::std::string& ExtraData::string_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.string_val)
  return string_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_string_val(const ::std::string& value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.string_val)
}
inline void ExtraData::set_string_val(const char* value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.string_val)
}
inline void ExtraData::set_string_val(const char* value, size_t size) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.string_val)
}
inline ::std::string* ExtraData::mutable_string_val() {
  set_has_string_val();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.string_val)
  return string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtraData::release_string_val() {
  clear_has_string_val();
  return string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_allocated_string_val(::std::string* string_val) {
  if (string_val != NULL) {
    set_has_string_val();
  } else {
    clear_has_string_val();
  }
  string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_val);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.string_val)
}

// optional bool bool_val = 6;
inline bool ExtraData::has_bool_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExtraData::set_has_bool_val() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExtraData::clear_has_bool_val() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExtraData::clear_bool_val() {
  bool_val_ = false;
  clear_has_bool_val();
}
inline bool ExtraData::bool_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.bool_val)
  return bool_val_;
}
inline void ExtraData::set_bool_val(bool value) {
  set_has_bool_val();
  bool_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.bool_val)
}

// optional bytes bytes_val = 7;
inline bool ExtraData::has_bytes_val() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExtraData::set_has_bytes_val() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ExtraData::clear_has_bytes_val() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ExtraData::clear_bytes_val() {
  bytes_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes_val();
}
inline const ::std::string& ExtraData::bytes_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.bytes_val)
  return bytes_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_bytes_val(const ::std::string& value) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.bytes_val)
}
inline void ExtraData::set_bytes_val(const char* value) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.bytes_val)
}
inline void ExtraData::set_bytes_val(const void* value, size_t size) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.bytes_val)
}
inline ::std::string* ExtraData::mutable_bytes_val() {
  set_has_bytes_val();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.bytes_val)
  return bytes_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtraData::release_bytes_val() {
  clear_has_bytes_val();
  return bytes_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtraData::set_allocated_bytes_val(::std::string* bytes_val) {
  if (bytes_val != NULL) {
    set_has_bytes_val();
  } else {
    clear_has_bytes_val();
  }
  bytes_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_val);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.bytes_val)
}

// repeated .update_protocol_v3.ExtraData extra_val = 8;
inline int ExtraData::extra_val_size() const {
  return extra_val_.size();
}
inline void ExtraData::clear_extra_val() {
  extra_val_.Clear();
}
inline const ::update_protocol_v3::ExtraData& ExtraData::extra_val(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Get(index);
}
inline ::update_protocol_v3::ExtraData* ExtraData::mutable_extra_val(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Mutable(index);
}
inline ::update_protocol_v3::ExtraData* ExtraData::add_extra_val() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
ExtraData::mutable_extra_val() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.ExtraData.extra_val)
  return &extra_val_;
}
inline const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
ExtraData::extra_val() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.ExtraData.extra_val)
  return extra_val_;
}

// -------------------------------------------------------------------

// AxisButton

// optional float x = 1;
inline bool AxisButton::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AxisButton::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AxisButton::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AxisButton::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float AxisButton::x() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.AxisButton.x)
  return x_;
}
inline void AxisButton::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.AxisButton.x)
}

// optional float y = 2;
inline bool AxisButton::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AxisButton::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AxisButton::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AxisButton::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float AxisButton::y() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.AxisButton.y)
  return y_;
}
inline void AxisButton::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.AxisButton.y)
}

// -------------------------------------------------------------------

// LiveObject

// optional string label = 1;
inline bool LiveObject::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LiveObject::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LiveObject::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LiveObject::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& LiveObject::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveObject::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.label)
}
inline void LiveObject::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.LiveObject.label)
}
inline void LiveObject::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.LiveObject.label)
}
inline ::std::string* LiveObject::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LiveObject::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LiveObject::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.LiveObject.label)
}

// optional float x = 2;
inline bool LiveObject::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LiveObject::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LiveObject::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LiveObject::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float LiveObject::x() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.x)
  return x_;
}
inline void LiveObject::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.x)
}

// optional float y = 3;
inline bool LiveObject::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LiveObject::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LiveObject::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LiveObject::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float LiveObject::y() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.y)
  return y_;
}
inline void LiveObject::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.y)
}

// optional float z = 4;
inline bool LiveObject::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LiveObject::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LiveObject::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LiveObject::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float LiveObject::z() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.z)
  return z_;
}
inline void LiveObject::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.z)
}

// optional float qx = 5;
inline bool LiveObject::has_qx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LiveObject::set_has_qx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LiveObject::clear_has_qx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LiveObject::clear_qx() {
  qx_ = 0;
  clear_has_qx();
}
inline float LiveObject::qx() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qx)
  return qx_;
}
inline void LiveObject::set_qx(float value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qx)
}

// optional float qy = 6;
inline bool LiveObject::has_qy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LiveObject::set_has_qy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LiveObject::clear_has_qy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LiveObject::clear_qy() {
  qy_ = 0;
  clear_has_qy();
}
inline float LiveObject::qy() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qy)
  return qy_;
}
inline void LiveObject::set_qy(float value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qy)
}

// optional float qz = 7;
inline bool LiveObject::has_qz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LiveObject::set_has_qz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LiveObject::clear_has_qz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LiveObject::clear_qz() {
  qz_ = 0;
  clear_has_qz();
}
inline float LiveObject::qz() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qz)
  return qz_;
}
inline void LiveObject::set_qz(float value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qz)
}

// optional float qw = 8;
inline bool LiveObject::has_qw() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LiveObject::set_has_qw() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LiveObject::clear_has_qw() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LiveObject::clear_qw() {
  qw_ = 0;
  clear_has_qw();
}
inline float LiveObject::qw() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qw)
  return qw_;
}
inline void LiveObject::set_qw(float value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qw)
}

// optional int32 button_bits = 9;
inline bool LiveObject::has_button_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LiveObject::set_has_button_bits() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LiveObject::clear_has_button_bits() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LiveObject::clear_button_bits() {
  button_bits_ = 0;
  clear_has_button_bits();
}
inline ::google::protobuf::int32 LiveObject::button_bits() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.button_bits)
  return button_bits_;
}
inline void LiveObject::set_button_bits(::google::protobuf::int32 value) {
  set_has_button_bits();
  button_bits_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.button_bits)
}

// repeated .update_protocol_v3.AxisButton axis_buttons = 10;
inline int LiveObject::axis_buttons_size() const {
  return axis_buttons_.size();
}
inline void LiveObject::clear_axis_buttons() {
  axis_buttons_.Clear();
}
inline const ::update_protocol_v3::AxisButton& LiveObject::axis_buttons(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Get(index);
}
inline ::update_protocol_v3::AxisButton* LiveObject::mutable_axis_buttons(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Mutable(index);
}
inline ::update_protocol_v3::AxisButton* LiveObject::add_axis_buttons() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >*
LiveObject::mutable_axis_buttons() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.LiveObject.axis_buttons)
  return &axis_buttons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >&
LiveObject::axis_buttons() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_;
}

// repeated .update_protocol_v3.ExtraData extra_data = 11;
inline int LiveObject::extra_data_size() const {
  return extra_data_.size();
}
inline void LiveObject::clear_extra_data() {
  extra_data_.Clear();
}
inline const ::update_protocol_v3::ExtraData& LiveObject::extra_data(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Get(index);
}
inline ::update_protocol_v3::ExtraData* LiveObject::mutable_extra_data(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Mutable(index);
}
inline ::update_protocol_v3::ExtraData* LiveObject::add_extra_data() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
LiveObject::mutable_extra_data() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.LiveObject.extra_data)
  return &extra_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
LiveObject::extra_data() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.LiveObject.extra_data)
  return extra_data_;
}

// -------------------------------------------------------------------

// Update

// optional string label = 1;
inline bool Update::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Update::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Update::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Update::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
inline const ::std::string& Update::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Update::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.label)
}
inline void Update::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.Update.label)
}
inline void Update::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.Update.label)
}
inline ::std::string* Update::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.Update.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Update::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Update::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.Update.label)
}

// optional int32 mod_version = 2;
inline bool Update::has_mod_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Update::set_has_mod_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Update::clear_has_mod_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Update::clear_mod_version() {
  mod_version_ = 0;
  clear_has_mod_version();
}
inline ::google::protobuf::int32 Update::mod_version() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.mod_version)
  return mod_version_;
}
inline void Update::set_mod_version(::google::protobuf::int32 value) {
  set_has_mod_version();
  mod_version_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.mod_version)
}

// optional bool lhs_frame = 3;
inline bool Update::has_lhs_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Update::set_has_lhs_frame() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Update::clear_has_lhs_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Update::clear_lhs_frame() {
  lhs_frame_ = false;
  clear_has_lhs_frame();
}
inline bool Update::lhs_frame() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.lhs_frame)
  return lhs_frame_;
}
inline void Update::set_lhs_frame(bool value) {
  set_has_lhs_frame();
  lhs_frame_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.lhs_frame)
}

// optional int32 time = 4;
inline bool Update::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Update::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Update::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Update::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Update::time() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.time)
  return time_;
}
inline void Update::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.time)
}

// repeated .update_protocol_v3.LiveObject live_objects = 5;
inline int Update::live_objects_size() const {
  return live_objects_.size();
}
inline void Update::clear_live_objects() {
  live_objects_.Clear();
}
inline const ::update_protocol_v3::LiveObject& Update::live_objects(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.live_objects)
  return live_objects_.Get(index);
}
inline ::update_protocol_v3::LiveObject* Update::mutable_live_objects(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.Update.live_objects)
  return live_objects_.Mutable(index);
}
inline ::update_protocol_v3::LiveObject* Update::add_live_objects() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.Update.live_objects)
  return live_objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >*
Update::mutable_live_objects() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.Update.live_objects)
  return &live_objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >&
Update::live_objects() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.Update.live_objects)
  return live_objects_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace update_protocol_v3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_update_5fprotocol_5fv3_2eproto__INCLUDED
