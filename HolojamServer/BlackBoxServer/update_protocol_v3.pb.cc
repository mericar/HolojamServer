// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_protocol_v3.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "update_protocol_v3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace update_protocol_v3 {

namespace {

const ::google::protobuf::Descriptor* ExtraData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtraData_reflection_ = NULL;
const ::google::protobuf::Descriptor* AxisButton_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AxisButton_reflection_ = NULL;
const ::google::protobuf::Descriptor* LiveObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LiveObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Update_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto() {
  protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "update_protocol_v3.proto");
  GOOGLE_CHECK(file != NULL);
  ExtraData_descriptor_ = file->message_type(0);
  static const int ExtraData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, int_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, float_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, double_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, string_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, bool_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, bytes_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, extra_val_),
  };
  ExtraData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExtraData_descriptor_,
      ExtraData::default_instance_,
      ExtraData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, _has_bits_[0]),
      -1,
      -1,
      sizeof(ExtraData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtraData, _internal_metadata_),
      -1);
  AxisButton_descriptor_ = file->message_type(1);
  static const int AxisButton_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AxisButton, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AxisButton, y_),
  };
  AxisButton_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AxisButton_descriptor_,
      AxisButton::default_instance_,
      AxisButton_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AxisButton, _has_bits_[0]),
      -1,
      -1,
      sizeof(AxisButton),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AxisButton, _internal_metadata_),
      -1);
  LiveObject_descriptor_ = file->message_type(2);
  static const int LiveObject_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, qx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, qy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, qz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, qw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, button_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, axis_buttons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, extra_data_),
  };
  LiveObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LiveObject_descriptor_,
      LiveObject::default_instance_,
      LiveObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, _has_bits_[0]),
      -1,
      -1,
      sizeof(LiveObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LiveObject, _internal_metadata_),
      -1);
  Update_descriptor_ = file->message_type(3);
  static const int Update_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, mod_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, lhs_frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, live_objects_),
  };
  Update_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Update_descriptor_,
      Update::default_instance_,
      Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, _has_bits_[0]),
      -1,
      -1,
      sizeof(Update),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_update_5fprotocol_5fv3_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExtraData_descriptor_, &ExtraData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AxisButton_descriptor_, &AxisButton::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LiveObject_descriptor_, &LiveObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Update_descriptor_, &Update::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto() {
  delete ExtraData::default_instance_;
  delete ExtraData_reflection_;
  delete AxisButton::default_instance_;
  delete AxisButton_reflection_;
  delete LiveObject::default_instance_;
  delete LiveObject_reflection_;
  delete Update::default_instance_;
  delete Update_reflection_;
}

void protobuf_AddDesc_update_5fprotocol_5fv3_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030update_protocol_v3.proto\022\022update_proto"
    "col_v3\"\275\001\n\tExtraData\022\r\n\005label\030\001 \001(\t\022\017\n\007i"
    "nt_val\030\002 \001(\005\022\021\n\tfloat_val\030\003 \001(\002\022\022\n\ndoubl"
    "e_val\030\004 \001(\001\022\022\n\nstring_val\030\005 \001(\t\022\020\n\010bool_"
    "val\030\006 \001(\010\022\021\n\tbytes_val\030\007 \001(\014\0220\n\textra_va"
    "l\030\010 \003(\0132\035.update_protocol_v3.ExtraData\"\""
    "\n\nAxisButton\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"\352\001\n\nL"
    "iveObject\022\r\n\005label\030\001 \001(\t\022\t\n\001x\030\002 \001(\002\022\t\n\001y"
    "\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\022\n\n\002qx\030\005 \001(\002\022\n\n\002qy\030\006 \001("
    "\002\022\n\n\002qz\030\007 \001(\002\022\n\n\002qw\030\010 \001(\002\022\023\n\013button_bits"
    "\030\t \001(\005\0224\n\014axis_buttons\030\n \003(\0132\036.update_pr"
    "otocol_v3.AxisButton\0221\n\nextra_data\030\013 \003(\013"
    "2\035.update_protocol_v3.ExtraData\"\203\001\n\006Upda"
    "te\022\r\n\005label\030\001 \001(\t\022\023\n\013mod_version\030\002 \001(\005\022\021"
    "\n\tlhs_frame\030\003 \001(\010\022\014\n\004time\030\004 \001(\005\0224\n\014live_"
    "objects\030\005 \003(\0132\036.update_protocol_v3.LiveO"
    "bjectB\002H\001", 649);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "update_protocol_v3.proto", &protobuf_RegisterTypes);
  ExtraData::default_instance_ = new ExtraData();
  AxisButton::default_instance_ = new AxisButton();
  LiveObject::default_instance_ = new LiveObject();
  Update::default_instance_ = new Update();
  ExtraData::default_instance_->InitAsDefaultInstance();
  AxisButton::default_instance_->InitAsDefaultInstance();
  LiveObject::default_instance_->InitAsDefaultInstance();
  Update::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_update_5fprotocol_5fv3_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_update_5fprotocol_5fv3_2eproto {
  StaticDescriptorInitializer_update_5fprotocol_5fv3_2eproto() {
    protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  }
} static_descriptor_initializer_update_5fprotocol_5fv3_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ExtraData::kLabelFieldNumber;
const int ExtraData::kIntValFieldNumber;
const int ExtraData::kFloatValFieldNumber;
const int ExtraData::kDoubleValFieldNumber;
const int ExtraData::kStringValFieldNumber;
const int ExtraData::kBoolValFieldNumber;
const int ExtraData::kBytesValFieldNumber;
const int ExtraData::kExtraValFieldNumber;
#endif  // !_MSC_VER

ExtraData::ExtraData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:update_protocol_v3.ExtraData)
}

void ExtraData::InitAsDefaultInstance() {
}

ExtraData::ExtraData(const ExtraData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:update_protocol_v3.ExtraData)
}

void ExtraData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int_val_ = 0;
  float_val_ = 0;
  double_val_ = 0;
  string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bool_val_ = false;
  bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtraData::~ExtraData() {
  // @@protoc_insertion_point(destructor:update_protocol_v3.ExtraData)
  SharedDtor();
}

void ExtraData::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ExtraData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtraData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtraData_descriptor_;
}

const ExtraData& ExtraData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  return *default_instance_;
}

ExtraData* ExtraData::default_instance_ = NULL;

ExtraData* ExtraData::New(::google::protobuf::Arena* arena) const {
  ExtraData* n = new ExtraData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtraData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExtraData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(int_val_, double_val_);
    if (has_label()) {
      label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_string_val()) {
      string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    bool_val_ = false;
    if (has_bytes_val()) {
      bytes_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  extra_val_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ExtraData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:update_protocol_v3.ExtraData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_protocol_v3.ExtraData.label");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int_val;
        break;
      }

      // optional int32 int_val = 2;
      case 2: {
        if (tag == 16) {
         parse_int_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int_val_)));
          set_has_int_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_float_val;
        break;
      }

      // optional float float_val = 3;
      case 3: {
        if (tag == 29) {
         parse_float_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float_val_)));
          set_has_float_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_double_val;
        break;
      }

      // optional double double_val = 4;
      case 4: {
        if (tag == 33) {
         parse_double_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double_val_)));
          set_has_double_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_string_val;
        break;
      }

      // optional string string_val = 5;
      case 5: {
        if (tag == 42) {
         parse_string_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_val().data(), this->string_val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_protocol_v3.ExtraData.string_val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bool_val;
        break;
      }

      // optional bool bool_val = 6;
      case 6: {
        if (tag == 48) {
         parse_bool_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_bytes_val;
        break;
      }

      // optional bytes bytes_val = 7;
      case 7: {
        if (tag == 58) {
         parse_bytes_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_extra_val;
        break;
      }

      // repeated .update_protocol_v3.ExtraData extra_val = 8;
      case 8: {
        if (tag == 66) {
         parse_extra_val:
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_val()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_extra_val;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:update_protocol_v3.ExtraData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:update_protocol_v3.ExtraData)
  return false;
#undef DO_
}

void ExtraData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:update_protocol_v3.ExtraData)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.ExtraData.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional int32 int_val = 2;
  if (has_int_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int_val(), output);
  }

  // optional float float_val = 3;
  if (has_float_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->float_val(), output);
  }

  // optional double double_val = 4;
  if (has_double_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_val(), output);
  }

  // optional string string_val = 5;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.ExtraData.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->string_val(), output);
  }

  // optional bool bool_val = 6;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->bool_val(), output);
  }

  // optional bytes bytes_val = 7;
  if (has_bytes_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->bytes_val(), output);
  }

  // repeated .update_protocol_v3.ExtraData extra_val = 8;
  for (unsigned int i = 0, n = this->extra_val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->extra_val(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:update_protocol_v3.ExtraData)
}

::google::protobuf::uint8* ExtraData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:update_protocol_v3.ExtraData)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.ExtraData.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional int32 int_val = 2;
  if (has_int_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int_val(), target);
  }

  // optional float float_val = 3;
  if (has_float_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->float_val(), target);
  }

  // optional double double_val = 4;
  if (has_double_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_val(), target);
  }

  // optional string string_val = 5;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.ExtraData.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->string_val(), target);
  }

  // optional bool bool_val = 6;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->bool_val(), target);
  }

  // optional bytes bytes_val = 7;
  if (has_bytes_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->bytes_val(), target);
  }

  // repeated .update_protocol_v3.ExtraData extra_val = 8;
  for (unsigned int i = 0, n = this->extra_val_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->extra_val(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:update_protocol_v3.ExtraData)
  return target;
}

int ExtraData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional int32 int_val = 2;
    if (has_int_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_val());
    }

    // optional float float_val = 3;
    if (has_float_val()) {
      total_size += 1 + 4;
    }

    // optional double double_val = 4;
    if (has_double_val()) {
      total_size += 1 + 8;
    }

    // optional string string_val = 5;
    if (has_string_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
    }

    // optional bool bool_val = 6;
    if (has_bool_val()) {
      total_size += 1 + 1;
    }

    // optional bytes bytes_val = 7;
    if (has_bytes_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_val());
    }

  }
  // repeated .update_protocol_v3.ExtraData extra_val = 8;
  total_size += 1 * this->extra_val_size();
  for (int i = 0; i < this->extra_val_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_val(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtraData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExtraData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtraData>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtraData::MergeFrom(const ExtraData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  extra_val_.MergeFrom(from.extra_val_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label()) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (from.has_int_val()) {
      set_int_val(from.int_val());
    }
    if (from.has_float_val()) {
      set_float_val(from.float_val());
    }
    if (from.has_double_val()) {
      set_double_val(from.double_val());
    }
    if (from.has_string_val()) {
      set_has_string_val();
      string_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_val_);
    }
    if (from.has_bool_val()) {
      set_bool_val(from.bool_val());
    }
    if (from.has_bytes_val()) {
      set_has_bytes_val();
      bytes_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_val_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ExtraData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtraData::CopyFrom(const ExtraData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtraData::IsInitialized() const {

  return true;
}

void ExtraData::Swap(ExtraData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtraData::InternalSwap(ExtraData* other) {
  label_.Swap(&other->label_);
  std::swap(int_val_, other->int_val_);
  std::swap(float_val_, other->float_val_);
  std::swap(double_val_, other->double_val_);
  string_val_.Swap(&other->string_val_);
  std::swap(bool_val_, other->bool_val_);
  bytes_val_.Swap(&other->bytes_val_);
  extra_val_.UnsafeArenaSwap(&other->extra_val_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtraData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtraData_descriptor_;
  metadata.reflection = ExtraData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtraData

// optional string label = 1;
bool ExtraData::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExtraData::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void ExtraData::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExtraData::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
 const ::std::string& ExtraData::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.label)
}
 void ExtraData::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.label)
}
 void ExtraData::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.label)
}
 ::std::string* ExtraData::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExtraData::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.label)
}

// optional int32 int_val = 2;
bool ExtraData::has_int_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExtraData::set_has_int_val() {
  _has_bits_[0] |= 0x00000002u;
}
void ExtraData::clear_has_int_val() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExtraData::clear_int_val() {
  int_val_ = 0;
  clear_has_int_val();
}
 ::google::protobuf::int32 ExtraData::int_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.int_val)
  return int_val_;
}
 void ExtraData::set_int_val(::google::protobuf::int32 value) {
  set_has_int_val();
  int_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.int_val)
}

// optional float float_val = 3;
bool ExtraData::has_float_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExtraData::set_has_float_val() {
  _has_bits_[0] |= 0x00000004u;
}
void ExtraData::clear_has_float_val() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExtraData::clear_float_val() {
  float_val_ = 0;
  clear_has_float_val();
}
 float ExtraData::float_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.float_val)
  return float_val_;
}
 void ExtraData::set_float_val(float value) {
  set_has_float_val();
  float_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.float_val)
}

// optional double double_val = 4;
bool ExtraData::has_double_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ExtraData::set_has_double_val() {
  _has_bits_[0] |= 0x00000008u;
}
void ExtraData::clear_has_double_val() {
  _has_bits_[0] &= ~0x00000008u;
}
void ExtraData::clear_double_val() {
  double_val_ = 0;
  clear_has_double_val();
}
 double ExtraData::double_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.double_val)
  return double_val_;
}
 void ExtraData::set_double_val(double value) {
  set_has_double_val();
  double_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.double_val)
}

// optional string string_val = 5;
bool ExtraData::has_string_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ExtraData::set_has_string_val() {
  _has_bits_[0] |= 0x00000010u;
}
void ExtraData::clear_has_string_val() {
  _has_bits_[0] &= ~0x00000010u;
}
void ExtraData::clear_string_val() {
  string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_val();
}
 const ::std::string& ExtraData::string_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.string_val)
  return string_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_string_val(const ::std::string& value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.string_val)
}
 void ExtraData::set_string_val(const char* value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.string_val)
}
 void ExtraData::set_string_val(const char* value, size_t size) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.string_val)
}
 ::std::string* ExtraData::mutable_string_val() {
  set_has_string_val();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.string_val)
  return string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExtraData::release_string_val() {
  clear_has_string_val();
  return string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_allocated_string_val(::std::string* string_val) {
  if (string_val != NULL) {
    set_has_string_val();
  } else {
    clear_has_string_val();
  }
  string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_val);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.string_val)
}

// optional bool bool_val = 6;
bool ExtraData::has_bool_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ExtraData::set_has_bool_val() {
  _has_bits_[0] |= 0x00000020u;
}
void ExtraData::clear_has_bool_val() {
  _has_bits_[0] &= ~0x00000020u;
}
void ExtraData::clear_bool_val() {
  bool_val_ = false;
  clear_has_bool_val();
}
 bool ExtraData::bool_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.bool_val)
  return bool_val_;
}
 void ExtraData::set_bool_val(bool value) {
  set_has_bool_val();
  bool_val_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.bool_val)
}

// optional bytes bytes_val = 7;
bool ExtraData::has_bytes_val() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ExtraData::set_has_bytes_val() {
  _has_bits_[0] |= 0x00000040u;
}
void ExtraData::clear_has_bytes_val() {
  _has_bits_[0] &= ~0x00000040u;
}
void ExtraData::clear_bytes_val() {
  bytes_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes_val();
}
 const ::std::string& ExtraData::bytes_val() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.bytes_val)
  return bytes_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_bytes_val(const ::std::string& value) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.ExtraData.bytes_val)
}
 void ExtraData::set_bytes_val(const char* value) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.ExtraData.bytes_val)
}
 void ExtraData::set_bytes_val(const void* value, size_t size) {
  set_has_bytes_val();
  bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.ExtraData.bytes_val)
}
 ::std::string* ExtraData::mutable_bytes_val() {
  set_has_bytes_val();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.bytes_val)
  return bytes_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ExtraData::release_bytes_val() {
  clear_has_bytes_val();
  return bytes_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ExtraData::set_allocated_bytes_val(::std::string* bytes_val) {
  if (bytes_val != NULL) {
    set_has_bytes_val();
  } else {
    clear_has_bytes_val();
  }
  bytes_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_val);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.ExtraData.bytes_val)
}

// repeated .update_protocol_v3.ExtraData extra_val = 8;
int ExtraData::extra_val_size() const {
  return extra_val_.size();
}
void ExtraData::clear_extra_val() {
  extra_val_.Clear();
}
const ::update_protocol_v3::ExtraData& ExtraData::extra_val(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Get(index);
}
::update_protocol_v3::ExtraData* ExtraData::mutable_extra_val(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Mutable(index);
}
::update_protocol_v3::ExtraData* ExtraData::add_extra_val() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.ExtraData.extra_val)
  return extra_val_.Add();
}
::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
ExtraData::mutable_extra_val() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.ExtraData.extra_val)
  return &extra_val_;
}
const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
ExtraData::extra_val() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.ExtraData.extra_val)
  return extra_val_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int AxisButton::kXFieldNumber;
const int AxisButton::kYFieldNumber;
#endif  // !_MSC_VER

AxisButton::AxisButton()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:update_protocol_v3.AxisButton)
}

void AxisButton::InitAsDefaultInstance() {
}

AxisButton::AxisButton(const AxisButton& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:update_protocol_v3.AxisButton)
}

void AxisButton::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AxisButton::~AxisButton() {
  // @@protoc_insertion_point(destructor:update_protocol_v3.AxisButton)
  SharedDtor();
}

void AxisButton::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AxisButton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AxisButton::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AxisButton_descriptor_;
}

const AxisButton& AxisButton::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  return *default_instance_;
}

AxisButton* AxisButton::default_instance_ = NULL;

AxisButton* AxisButton::New(::google::protobuf::Arena* arena) const {
  AxisButton* n = new AxisButton;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AxisButton::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AxisButton*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, y_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AxisButton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:update_protocol_v3.AxisButton)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // optional float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:update_protocol_v3.AxisButton)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:update_protocol_v3.AxisButton)
  return false;
#undef DO_
}

void AxisButton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:update_protocol_v3.AxisButton)
  // optional float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:update_protocol_v3.AxisButton)
}

::google::protobuf::uint8* AxisButton::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:update_protocol_v3.AxisButton)
  // optional float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:update_protocol_v3.AxisButton)
  return target;
}

int AxisButton::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AxisButton::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AxisButton* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AxisButton>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AxisButton::MergeFrom(const AxisButton& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AxisButton::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AxisButton::CopyFrom(const AxisButton& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AxisButton::IsInitialized() const {

  return true;
}

void AxisButton::Swap(AxisButton* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AxisButton::InternalSwap(AxisButton* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AxisButton::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AxisButton_descriptor_;
  metadata.reflection = AxisButton_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AxisButton

// optional float x = 1;
bool AxisButton::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AxisButton::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void AxisButton::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void AxisButton::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float AxisButton::x() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.AxisButton.x)
  return x_;
}
 void AxisButton::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.AxisButton.x)
}

// optional float y = 2;
bool AxisButton::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AxisButton::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void AxisButton::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void AxisButton::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float AxisButton::y() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.AxisButton.y)
  return y_;
}
 void AxisButton::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.AxisButton.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LiveObject::kLabelFieldNumber;
const int LiveObject::kXFieldNumber;
const int LiveObject::kYFieldNumber;
const int LiveObject::kZFieldNumber;
const int LiveObject::kQxFieldNumber;
const int LiveObject::kQyFieldNumber;
const int LiveObject::kQzFieldNumber;
const int LiveObject::kQwFieldNumber;
const int LiveObject::kButtonBitsFieldNumber;
const int LiveObject::kAxisButtonsFieldNumber;
const int LiveObject::kExtraDataFieldNumber;
#endif  // !_MSC_VER

LiveObject::LiveObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:update_protocol_v3.LiveObject)
}

void LiveObject::InitAsDefaultInstance() {
}

LiveObject::LiveObject(const LiveObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:update_protocol_v3.LiveObject)
}

void LiveObject::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  z_ = 0;
  qx_ = 0;
  qy_ = 0;
  qz_ = 0;
  qw_ = 0;
  button_bits_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LiveObject::~LiveObject() {
  // @@protoc_insertion_point(destructor:update_protocol_v3.LiveObject)
  SharedDtor();
}

void LiveObject::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LiveObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LiveObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LiveObject_descriptor_;
}

const LiveObject& LiveObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  return *default_instance_;
}

LiveObject* LiveObject::default_instance_ = NULL;

LiveObject* LiveObject::New(::google::protobuf::Arena* arena) const {
  LiveObject* n = new LiveObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LiveObject::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LiveObject*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(x_, qw_);
    if (has_label()) {
      label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  button_bits_ = 0;

#undef ZR_HELPER_
#undef ZR_

  axis_buttons_.Clear();
  extra_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LiveObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:update_protocol_v3.LiveObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_protocol_v3.LiveObject.label");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // optional float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // optional float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_z;
        break;
      }

      // optional float z = 4;
      case 4: {
        if (tag == 37) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_qx;
        break;
      }

      // optional float qx = 5;
      case 5: {
        if (tag == 45) {
         parse_qx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qx_)));
          set_has_qx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_qy;
        break;
      }

      // optional float qy = 6;
      case 6: {
        if (tag == 53) {
         parse_qy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qy_)));
          set_has_qy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_qz;
        break;
      }

      // optional float qz = 7;
      case 7: {
        if (tag == 61) {
         parse_qz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qz_)));
          set_has_qz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_qw;
        break;
      }

      // optional float qw = 8;
      case 8: {
        if (tag == 69) {
         parse_qw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &qw_)));
          set_has_qw();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_button_bits;
        break;
      }

      // optional int32 button_bits = 9;
      case 9: {
        if (tag == 72) {
         parse_button_bits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &button_bits_)));
          set_has_button_bits();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_axis_buttons;
        break;
      }

      // repeated .update_protocol_v3.AxisButton axis_buttons = 10;
      case 10: {
        if (tag == 82) {
         parse_axis_buttons:
          DO_(input->IncrementRecursionDepth());
         parse_loop_axis_buttons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_axis_buttons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_axis_buttons;
        if (input->ExpectTag(90)) goto parse_loop_extra_data;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .update_protocol_v3.ExtraData extra_data = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_extra_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_extra_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_extra_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:update_protocol_v3.LiveObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:update_protocol_v3.LiveObject)
  return false;
#undef DO_
}

void LiveObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:update_protocol_v3.LiveObject)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.LiveObject.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // optional float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // optional float z = 4;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // optional float qx = 5;
  if (has_qx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->qx(), output);
  }

  // optional float qy = 6;
  if (has_qy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->qy(), output);
  }

  // optional float qz = 7;
  if (has_qz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->qz(), output);
  }

  // optional float qw = 8;
  if (has_qw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->qw(), output);
  }

  // optional int32 button_bits = 9;
  if (has_button_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->button_bits(), output);
  }

  // repeated .update_protocol_v3.AxisButton axis_buttons = 10;
  for (unsigned int i = 0, n = this->axis_buttons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->axis_buttons(i), output);
  }

  // repeated .update_protocol_v3.ExtraData extra_data = 11;
  for (unsigned int i = 0, n = this->extra_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->extra_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:update_protocol_v3.LiveObject)
}

::google::protobuf::uint8* LiveObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:update_protocol_v3.LiveObject)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.LiveObject.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // optional float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // optional float z = 4;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // optional float qx = 5;
  if (has_qx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->qx(), target);
  }

  // optional float qy = 6;
  if (has_qy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->qy(), target);
  }

  // optional float qz = 7;
  if (has_qz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->qz(), target);
  }

  // optional float qw = 8;
  if (has_qw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->qw(), target);
  }

  // optional int32 button_bits = 9;
  if (has_button_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->button_bits(), target);
  }

  // repeated .update_protocol_v3.AxisButton axis_buttons = 10;
  for (unsigned int i = 0, n = this->axis_buttons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->axis_buttons(i), target);
  }

  // repeated .update_protocol_v3.ExtraData extra_data = 11;
  for (unsigned int i = 0, n = this->extra_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->extra_data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:update_protocol_v3.LiveObject)
  return target;
}

int LiveObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 4;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // optional float qx = 5;
    if (has_qx()) {
      total_size += 1 + 4;
    }

    // optional float qy = 6;
    if (has_qy()) {
      total_size += 1 + 4;
    }

    // optional float qz = 7;
    if (has_qz()) {
      total_size += 1 + 4;
    }

    // optional float qw = 8;
    if (has_qw()) {
      total_size += 1 + 4;
    }

  }
  // optional int32 button_bits = 9;
  if (has_button_bits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->button_bits());
  }

  // repeated .update_protocol_v3.AxisButton axis_buttons = 10;
  total_size += 1 * this->axis_buttons_size();
  for (int i = 0; i < this->axis_buttons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->axis_buttons(i));
  }

  // repeated .update_protocol_v3.ExtraData extra_data = 11;
  total_size += 1 * this->extra_data_size();
  for (int i = 0; i < this->extra_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LiveObject::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LiveObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LiveObject>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LiveObject::MergeFrom(const LiveObject& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  axis_buttons_.MergeFrom(from.axis_buttons_);
  extra_data_.MergeFrom(from.extra_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label()) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_qx()) {
      set_qx(from.qx());
    }
    if (from.has_qy()) {
      set_qy(from.qy());
    }
    if (from.has_qz()) {
      set_qz(from.qz());
    }
    if (from.has_qw()) {
      set_qw(from.qw());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_button_bits()) {
      set_button_bits(from.button_bits());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LiveObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LiveObject::CopyFrom(const LiveObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiveObject::IsInitialized() const {

  return true;
}

void LiveObject::Swap(LiveObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LiveObject::InternalSwap(LiveObject* other) {
  label_.Swap(&other->label_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(qx_, other->qx_);
  std::swap(qy_, other->qy_);
  std::swap(qz_, other->qz_);
  std::swap(qw_, other->qw_);
  std::swap(button_bits_, other->button_bits_);
  axis_buttons_.UnsafeArenaSwap(&other->axis_buttons_);
  extra_data_.UnsafeArenaSwap(&other->extra_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LiveObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LiveObject_descriptor_;
  metadata.reflection = LiveObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LiveObject

// optional string label = 1;
bool LiveObject::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LiveObject::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void LiveObject::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void LiveObject::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
 const ::std::string& LiveObject::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LiveObject::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.label)
}
 void LiveObject::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.LiveObject.label)
}
 void LiveObject::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.LiveObject.label)
}
 ::std::string* LiveObject::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LiveObject::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LiveObject::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.LiveObject.label)
}

// optional float x = 2;
bool LiveObject::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LiveObject::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void LiveObject::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void LiveObject::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float LiveObject::x() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.x)
  return x_;
}
 void LiveObject::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.x)
}

// optional float y = 3;
bool LiveObject::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LiveObject::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void LiveObject::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void LiveObject::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float LiveObject::y() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.y)
  return y_;
}
 void LiveObject::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.y)
}

// optional float z = 4;
bool LiveObject::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LiveObject::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
void LiveObject::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
void LiveObject::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float LiveObject::z() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.z)
  return z_;
}
 void LiveObject::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.z)
}

// optional float qx = 5;
bool LiveObject::has_qx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LiveObject::set_has_qx() {
  _has_bits_[0] |= 0x00000010u;
}
void LiveObject::clear_has_qx() {
  _has_bits_[0] &= ~0x00000010u;
}
void LiveObject::clear_qx() {
  qx_ = 0;
  clear_has_qx();
}
 float LiveObject::qx() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qx)
  return qx_;
}
 void LiveObject::set_qx(float value) {
  set_has_qx();
  qx_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qx)
}

// optional float qy = 6;
bool LiveObject::has_qy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LiveObject::set_has_qy() {
  _has_bits_[0] |= 0x00000020u;
}
void LiveObject::clear_has_qy() {
  _has_bits_[0] &= ~0x00000020u;
}
void LiveObject::clear_qy() {
  qy_ = 0;
  clear_has_qy();
}
 float LiveObject::qy() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qy)
  return qy_;
}
 void LiveObject::set_qy(float value) {
  set_has_qy();
  qy_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qy)
}

// optional float qz = 7;
bool LiveObject::has_qz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LiveObject::set_has_qz() {
  _has_bits_[0] |= 0x00000040u;
}
void LiveObject::clear_has_qz() {
  _has_bits_[0] &= ~0x00000040u;
}
void LiveObject::clear_qz() {
  qz_ = 0;
  clear_has_qz();
}
 float LiveObject::qz() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qz)
  return qz_;
}
 void LiveObject::set_qz(float value) {
  set_has_qz();
  qz_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qz)
}

// optional float qw = 8;
bool LiveObject::has_qw() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LiveObject::set_has_qw() {
  _has_bits_[0] |= 0x00000080u;
}
void LiveObject::clear_has_qw() {
  _has_bits_[0] &= ~0x00000080u;
}
void LiveObject::clear_qw() {
  qw_ = 0;
  clear_has_qw();
}
 float LiveObject::qw() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.qw)
  return qw_;
}
 void LiveObject::set_qw(float value) {
  set_has_qw();
  qw_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.qw)
}

// optional int32 button_bits = 9;
bool LiveObject::has_button_bits() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LiveObject::set_has_button_bits() {
  _has_bits_[0] |= 0x00000100u;
}
void LiveObject::clear_has_button_bits() {
  _has_bits_[0] &= ~0x00000100u;
}
void LiveObject::clear_button_bits() {
  button_bits_ = 0;
  clear_has_button_bits();
}
 ::google::protobuf::int32 LiveObject::button_bits() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.button_bits)
  return button_bits_;
}
 void LiveObject::set_button_bits(::google::protobuf::int32 value) {
  set_has_button_bits();
  button_bits_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.LiveObject.button_bits)
}

// repeated .update_protocol_v3.AxisButton axis_buttons = 10;
int LiveObject::axis_buttons_size() const {
  return axis_buttons_.size();
}
void LiveObject::clear_axis_buttons() {
  axis_buttons_.Clear();
}
const ::update_protocol_v3::AxisButton& LiveObject::axis_buttons(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Get(index);
}
::update_protocol_v3::AxisButton* LiveObject::mutable_axis_buttons(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Mutable(index);
}
::update_protocol_v3::AxisButton* LiveObject::add_axis_buttons() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_.Add();
}
::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >*
LiveObject::mutable_axis_buttons() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.LiveObject.axis_buttons)
  return &axis_buttons_;
}
const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::AxisButton >&
LiveObject::axis_buttons() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.LiveObject.axis_buttons)
  return axis_buttons_;
}

// repeated .update_protocol_v3.ExtraData extra_data = 11;
int LiveObject::extra_data_size() const {
  return extra_data_.size();
}
void LiveObject::clear_extra_data() {
  extra_data_.Clear();
}
const ::update_protocol_v3::ExtraData& LiveObject::extra_data(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Get(index);
}
::update_protocol_v3::ExtraData* LiveObject::mutable_extra_data(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Mutable(index);
}
::update_protocol_v3::ExtraData* LiveObject::add_extra_data() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.LiveObject.extra_data)
  return extra_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >*
LiveObject::mutable_extra_data() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.LiveObject.extra_data)
  return &extra_data_;
}
const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::ExtraData >&
LiveObject::extra_data() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.LiveObject.extra_data)
  return extra_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Update::kLabelFieldNumber;
const int Update::kModVersionFieldNumber;
const int Update::kLhsFrameFieldNumber;
const int Update::kTimeFieldNumber;
const int Update::kLiveObjectsFieldNumber;
#endif  // !_MSC_VER

Update::Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:update_protocol_v3.Update)
}

void Update::InitAsDefaultInstance() {
}

Update::Update(const Update& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:update_protocol_v3.Update)
}

void Update::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mod_version_ = 0;
  lhs_frame_ = false;
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Update::~Update() {
  // @@protoc_insertion_point(destructor:update_protocol_v3.Update)
  SharedDtor();
}

void Update::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Update_descriptor_;
}

const Update& Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_update_5fprotocol_5fv3_2eproto();
  return *default_instance_;
}

Update* Update::default_instance_ = NULL;

Update* Update::New(::google::protobuf::Arena* arena) const {
  Update* n = new Update;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Update::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Update*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(mod_version_, lhs_frame_);
    if (has_label()) {
      label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    time_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  live_objects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:update_protocol_v3.Update)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "update_protocol_v3.Update.label");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mod_version;
        break;
      }

      // optional int32 mod_version = 2;
      case 2: {
        if (tag == 16) {
         parse_mod_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mod_version_)));
          set_has_mod_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lhs_frame;
        break;
      }

      // optional bool lhs_frame = 3;
      case 3: {
        if (tag == 24) {
         parse_lhs_frame:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lhs_frame_)));
          set_has_lhs_frame();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_time;
        break;
      }

      // optional int32 time = 4;
      case 4: {
        if (tag == 32) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_live_objects;
        break;
      }

      // repeated .update_protocol_v3.LiveObject live_objects = 5;
      case 5: {
        if (tag == 42) {
         parse_live_objects:
          DO_(input->IncrementRecursionDepth());
         parse_loop_live_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_live_objects()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_live_objects;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:update_protocol_v3.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:update_protocol_v3.Update)
  return false;
#undef DO_
}

void Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:update_protocol_v3.Update)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.Update.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // optional int32 mod_version = 2;
  if (has_mod_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mod_version(), output);
  }

  // optional bool lhs_frame = 3;
  if (has_lhs_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->lhs_frame(), output);
  }

  // optional int32 time = 4;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time(), output);
  }

  // repeated .update_protocol_v3.LiveObject live_objects = 5;
  for (unsigned int i = 0, n = this->live_objects_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->live_objects(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:update_protocol_v3.Update)
}

::google::protobuf::uint8* Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:update_protocol_v3.Update)
  // optional string label = 1;
  if (has_label()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "update_protocol_v3.Update.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // optional int32 mod_version = 2;
  if (has_mod_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mod_version(), target);
  }

  // optional bool lhs_frame = 3;
  if (has_lhs_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->lhs_frame(), target);
  }

  // optional int32 time = 4;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time(), target);
  }

  // repeated .update_protocol_v3.LiveObject live_objects = 5;
  for (unsigned int i = 0, n = this->live_objects_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->live_objects(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:update_protocol_v3.Update)
  return target;
}

int Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string label = 1;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->label());
    }

    // optional int32 mod_version = 2;
    if (has_mod_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mod_version());
    }

    // optional bool lhs_frame = 3;
    if (has_lhs_frame()) {
      total_size += 1 + 1;
    }

    // optional int32 time = 4;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time());
    }

  }
  // repeated .update_protocol_v3.LiveObject live_objects = 5;
  total_size += 1 * this->live_objects_size();
  for (int i = 0; i < this->live_objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->live_objects(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Update::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Update* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Update>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Update::MergeFrom(const Update& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  live_objects_.MergeFrom(from.live_objects_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label()) {
      set_has_label();
      label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
    }
    if (from.has_mod_version()) {
      set_mod_version(from.mod_version());
    }
    if (from.has_lhs_frame()) {
      set_lhs_frame(from.lhs_frame());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Update::CopyFrom(const Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update::IsInitialized() const {

  return true;
}

void Update::Swap(Update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Update::InternalSwap(Update* other) {
  label_.Swap(&other->label_);
  std::swap(mod_version_, other->mod_version_);
  std::swap(lhs_frame_, other->lhs_frame_);
  std::swap(time_, other->time_);
  live_objects_.UnsafeArenaSwap(&other->live_objects_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Update_descriptor_;
  metadata.reflection = Update_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Update

// optional string label = 1;
bool Update::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Update::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
void Update::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
void Update::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label();
}
 const ::std::string& Update::label() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Update::set_label(const ::std::string& value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.label)
}
 void Update::set_label(const char* value) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:update_protocol_v3.Update.label)
}
 void Update::set_label(const char* value, size_t size) {
  set_has_label();
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:update_protocol_v3.Update.label)
}
 ::std::string* Update::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.Update.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Update::release_label() {
  clear_has_label();
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Update::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:update_protocol_v3.Update.label)
}

// optional int32 mod_version = 2;
bool Update::has_mod_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Update::set_has_mod_version() {
  _has_bits_[0] |= 0x00000002u;
}
void Update::clear_has_mod_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void Update::clear_mod_version() {
  mod_version_ = 0;
  clear_has_mod_version();
}
 ::google::protobuf::int32 Update::mod_version() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.mod_version)
  return mod_version_;
}
 void Update::set_mod_version(::google::protobuf::int32 value) {
  set_has_mod_version();
  mod_version_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.mod_version)
}

// optional bool lhs_frame = 3;
bool Update::has_lhs_frame() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Update::set_has_lhs_frame() {
  _has_bits_[0] |= 0x00000004u;
}
void Update::clear_has_lhs_frame() {
  _has_bits_[0] &= ~0x00000004u;
}
void Update::clear_lhs_frame() {
  lhs_frame_ = false;
  clear_has_lhs_frame();
}
 bool Update::lhs_frame() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.lhs_frame)
  return lhs_frame_;
}
 void Update::set_lhs_frame(bool value) {
  set_has_lhs_frame();
  lhs_frame_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.lhs_frame)
}

// optional int32 time = 4;
bool Update::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Update::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
void Update::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void Update::clear_time() {
  time_ = 0;
  clear_has_time();
}
 ::google::protobuf::int32 Update::time() const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.time)
  return time_;
}
 void Update::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:update_protocol_v3.Update.time)
}

// repeated .update_protocol_v3.LiveObject live_objects = 5;
int Update::live_objects_size() const {
  return live_objects_.size();
}
void Update::clear_live_objects() {
  live_objects_.Clear();
}
const ::update_protocol_v3::LiveObject& Update::live_objects(int index) const {
  // @@protoc_insertion_point(field_get:update_protocol_v3.Update.live_objects)
  return live_objects_.Get(index);
}
::update_protocol_v3::LiveObject* Update::mutable_live_objects(int index) {
  // @@protoc_insertion_point(field_mutable:update_protocol_v3.Update.live_objects)
  return live_objects_.Mutable(index);
}
::update_protocol_v3::LiveObject* Update::add_live_objects() {
  // @@protoc_insertion_point(field_add:update_protocol_v3.Update.live_objects)
  return live_objects_.Add();
}
::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >*
Update::mutable_live_objects() {
  // @@protoc_insertion_point(field_mutable_list:update_protocol_v3.Update.live_objects)
  return &live_objects_;
}
const ::google::protobuf::RepeatedPtrField< ::update_protocol_v3::LiveObject >&
Update::live_objects() const {
  // @@protoc_insertion_point(field_list:update_protocol_v3.Update.live_objects)
  return live_objects_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace update_protocol_v3

// @@protoc_insertion_point(global_scope)
